{"remainingRequest":"C:\\Users\\adidu\\Desktop\\Assignments\\CranewareQuizzingTeam7\\frontend2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\adidu\\Desktop\\Assignments\\CranewareQuizzingTeam7\\frontend2\\src\\App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\adidu\\Desktop\\Assignments\\CranewareQuizzingTeam7\\frontend2\\src\\App.vue","mtime":1602412727148},{"path":"C:\\Users\\adidu\\Desktop\\Assignments\\CranewareQuizzingTeam7\\frontend2\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\adidu\\Desktop\\Assignments\\CranewareQuizzingTeam7\\frontend2\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\adidu\\Desktop\\Assignments\\CranewareQuizzingTeam7\\frontend2\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\adidu\\Desktop\\Assignments\\CranewareQuizzingTeam7\\frontend2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\adidu\\Desktop\\Assignments\\CranewareQuizzingTeam7\\frontend2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KaHRtbCwNCmJvZHksDQojYXBwLA0KLmNvbnRhaW5lci1mbHVpZCB7DQogIGhlaWdodDogMTAwJSAhaW1wb3J0YW50Ow0KfQ0KDQppbnB1dCB7DQogIHRleHQtYWxpZ246IGNlbnRlcjsNCn0NCg0KLnBsYXllcnMgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOyAvKiBGYWxsYmFjayBjb2xvciAqLw0KICBjb2xvcjogIzAwMDsNCiAgYm9yZGVyLXJhZGl1czoxMHB4Ow0KICBmb250LXdlaWdodDogYm9sZDsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KICBib3JkZXI6IDJweCBzb2xpZCAjZjFmMWYxOw0KICBwb3NpdGlvbjogYWJzb2x1dGU7DQogIHdpZHRoOiAxMDAlOw0KICBwYWRkaW5nOiAyMHB4Ow0KICB0b3A6IDIwJTsNCn0NCg0KLmZhZGUtZW50ZXItYWN0aXZlLCAuZmFkZS1sZWF2ZS1hY3RpdmUgew0KICB0cmFuc2l0aW9uOiBvcGFjaXR5IDFzOw0KfQ0KLmZhZGUtZW50ZXIsIC5mYWRlLWxlYXZlLXRvIC8qIC5mYWRlLWxlYXZlLWFjdGl2ZSBiZWxvdyB2ZXJzaW9uIDIuMS44ICovIHsNCiAgb3BhY2l0eTogMDsNCn0NCg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6HA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <GradientContainer>\r\n      <transition name=\"fade\" mode=\"out-in\">\r\n        <Index class=\"h-100\" v-on:onJoinLobby=\"onJoinLobby\" v-on:onFindLobby=\"onFindLobby\" v-on:onCreateLobby=\"onCreateLobby\" v-if=\"currentView == 'index'\"> </Index>\r\n        <Lobby class=\"h-100\" v-on:onLobbyStart=\"onLobbyStart\" v-on:onLobbyExit=\"onLobbyExit\" :players=\"players\" :gamePin=\"gamePin\" v-if=\"currentView == 'lobby'\"></Lobby>\r\n         <!-- Quiz won't always need access to players array but does for now while the player list is stored here -->\r\n        <Quiz class=\"h-100\" v-on:done='onQuizFinish' v-if=\"currentView == 'quiz'\" :players=\"players\"></Quiz>\r\n        <Leaderboard class=\"h-100\" v-if=\"currentView == 'leaderboard'\" v-on:onExitLeaderboard=\"onExitLeaderboard\" :players=\"players\"></Leaderboard>\r\n      </transition>\r\n    </GradientContainer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Vue from \"vue\";\r\n\r\nimport { BootstrapVue } from \"bootstrap-vue\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"bootstrap-vue/dist/bootstrap-vue.css\";\r\nVue.use(BootstrapVue);\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nimport Pusher from \"pusher-js\";\r\n\r\n// Views\r\nimport Index from \"./components/Index.vue\";\r\nimport Lobby from \"./components/Lobby.vue\";\r\nimport Quiz from \"./components/Quiz.vue\";\r\nimport Leaderboard from \"./components/Leaderboard.vue\";\r\n\r\n// Components\r\nimport GradientContainer from \"./components/GradientContainer.vue\";\r\n\r\nexport default {\r\n  name: \"App\",\r\n  data: function() {\r\n    return {\r\n      currentView: \"index\",\r\n\r\n      // Vars for passing into Lobby\r\n      players: [],\r\n      gamePin: \"\",\r\n\r\n      pusher: null,\r\n      eventReader: null\r\n    };\r\n  },\r\n  components: {\r\n    Index,\r\n    Lobby,\r\n    Quiz,\r\n    Leaderboard,\r\n    GradientContainer\r\n  },\r\n  methods: {\r\n    // eslint-disable-next-line no-unused-vars\r\n    onJoinLobby(username, gamePin) {\r\n      // TODO: Validate username and game pin and display lobby view\r\n    },\r\n    // eslint-disable-next-line no-unused-vars\r\n    onFindLobby(username) {\r\n      // TODO: Find lobby view shown here\r\n    },\r\n    onCreateLobby(username) {\r\n      // TODO: Tell websocket we want a new lobby and get a pin back from the websocket\r\n      // Logs all network communication information to console\r\n\r\n      /*\r\n      Pusher.logToConsole = true;\r\n\r\n\r\n      // Instantiates a Pusher connection.\r\n      this.pusher = new Pusher('072127b07acd646fc5ec',\r\n        {\r\n          cluster: 'eu',\r\n          useTLS: true,\r\n          authEndpoint: 'http://localhost:5000/pusher/auth'\r\n        }\r\n      );\r\n\r\n      // Subscribes to the private lobby channel\r\n      this.eventReader = this.pusher.subscribe('private-lobby');\r\n      */\r\n\r\n\r\n      // For now: we create and assign our own (players will be handled by lobby in the future)\r\n      this.players = [\r\n        {\r\n          \"id\" : 1,\r\n          \"username\" : username,\r\n          \"score\" : 0\r\n        }\r\n      ]\r\n      this.gamePin = \"ABCDEF\"\r\n      this.currentView = \"lobby\";\r\n    },\r\n    // eslint-disable-next-line no-unused-vars\r\n    onLobbyStart(code) {\r\n      // TODO: Tell websocket to start and wait for response\r\n\r\n      // For now: just start\r\n      this.currentView = \"quiz\"\r\n    },\r\n    // eslint-disable-next-line no-unused-vars\r\n    onLobbyExit(code){\r\n      this.currentView = \"index\"\r\n\r\n      // TODO: Tell websocket lobby has been quit\r\n\r\n      this.players = []\r\n    },\r\n\r\n    onQuizFinish() {\r\n      this.currentView = \"leaderboard\"\r\n    },\r\n\r\n    onExitLeaderboard() {\r\n      this.currentView = \"index\"\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\nhtml,\r\nbody,\r\n#app,\r\n.container-fluid {\r\n  height: 100% !important;\r\n}\r\n\r\ninput {\r\n  text-align: center;\r\n}\r\n\r\n.players {\r\n  background-color: #fff; /* Fallback color */\r\n  color: #000;\r\n  border-radius:10px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  border: 2px solid #f1f1f1;\r\n  position: absolute;\r\n  width: 100%;\r\n  padding: 20px;\r\n  top: 20%;\r\n}\r\n\r\n.fade-enter-active, .fade-leave-active {\r\n  transition: opacity 1s;\r\n}\r\n.fade-enter, .fade-leave-to /* .fade-leave-active below version 2.1.8 */ {\r\n  opacity: 0;\r\n}\r\n</style>\r\n"]}]}